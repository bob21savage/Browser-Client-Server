{"ast":null,"code":"import React,{useState}from'react';import VideoDisplay from'./VideoDisplay';import SearchBar from'./SearchBar';function App(){const[videoLinks,setVideoLinks]=useState([]);const handleSearch=async query=>{const response=await fetch('http://127.0.0.1:5000/search',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({query})});if(response.ok){const data=await response.json();setVideoLinks(data.links);// Assuming the response contains a 'links' array\n}else{console.error('Failed to fetch videos');}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(SearchBar,{onSearch:handleSearch}),/*#__PURE__*/React.createElement(VideoDisplay,{videoLinks:videoLinks}));}export default App;","map":{"version":3,"names":["React","useState","VideoDisplay","SearchBar","App","videoLinks","setVideoLinks","handleSearch","query","response","fetch","method","headers","body","JSON","stringify","ok","data","json","links","console","error","createElement","onSearch"],"sources":["C:/Users/bpier/Desktop/scrape/scrape/my app/scrape/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport VideoDisplay from './VideoDisplay';\nimport SearchBar from './SearchBar';\n\nfunction App() {\n    const [videoLinks, setVideoLinks] = useState([]);\n\n    const handleSearch = async (query) => {\n        const response = await fetch('http://127.0.0.1:5000/search', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ query }),\n        });\n\n        if (response.ok) {\n            const data = await response.json();\n            setVideoLinks(data.links); // Assuming the response contains a 'links' array\n        } else {\n            console.error('Failed to fetch videos');\n        }\n    };\n\n    return (\n        <div>\n            <SearchBar onSearch={handleSearch} />\n            <VideoDisplay videoLinks={videoLinks} />\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,SAAS,KAAM,aAAa,CAEnC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGL,QAAQ,CAAC,EAAE,CAAC,CAEhD,KAAM,CAAAM,YAAY,CAAG,KAAO,CAAAC,KAAK,EAAK,CAClC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,8BAA8B,CAAE,CACzDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,KAAM,CAAC,CAClC,CAAC,CAAC,CAEF,GAAIC,QAAQ,CAACO,EAAE,CAAE,CACb,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClCZ,aAAa,CAACW,IAAI,CAACE,KAAK,CAAC,CAAE;AAC/B,CAAC,IAAM,CACHC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC,CAC3C,CACJ,CAAC,CAED,mBACIrB,KAAA,CAAAsB,aAAA,yBACItB,KAAA,CAAAsB,aAAA,CAACnB,SAAS,EAACoB,QAAQ,CAAEhB,YAAa,CAAE,CAAC,cACrCP,KAAA,CAAAsB,aAAA,CAACpB,YAAY,EAACG,UAAU,CAAEA,UAAW,CAAE,CACtC,CAAC,CAEd,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}